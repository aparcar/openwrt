From f3875f6ec84c3f7c704a8d9cc050e8a496893b1c Mon Sep 17 00:00:00 2001
From: Paul Spooren <mail@aparcar.org>
Date: Sat, 16 Mar 2024 18:20:46 +0100
Subject: [PATCH] fix macOS compilation

Pasting these bits together makes it work on macOS again.

Signed-off-by: Paul Spooren <mail@aparcar.org>
---
 libfetch/common.h |  6 ++++++
 src/adb.c         | 12 ++++++++++++
 2 files changed, 18 insertions(+)

diff --git a/libfetch/common.h b/libfetch/common.h
index 2c16bf7..42a8f0b 100644
--- a/libfetch/common.h
+++ b/libfetch/common.h
@@ -32,6 +32,12 @@
 #ifndef _COMMON_H_INCLUDED
 #define _COMMON_H_INCLUDED
 
+#ifndef SOCK_NONBLOCK
+#include <fcntl.h>
+#define SOCK_NONBLOCK O_NONBLOCK
+#define SOCK_CLOEXEC O_CLOEXEC
+#endif
+
 #define FTP_DEFAULT_PORT	21
 #define HTTP_DEFAULT_PORT	80
 #define HTTPS_DEFAULT_PORT	443
diff --git a/src/adb.c b/src/adb.c
index fe614af..70ce75b 100644
--- a/src/adb.c
+++ b/src/adb.c
@@ -952,6 +952,18 @@ adb_val_t adb_wo_arr(struct adb_obj *o, unsigned i, struct adb_obj *no)
 	return adb_wo_val(o, i, adb_w_arr(no));
 }
 
+#ifndef MUL_NO_OVERFLOW
+#define MUL_NO_OVERFLOW ((size_t)1 << (sizeof(size_t) * 4))
+#endif
+void *reallocarray(void *optr, size_t nmemb, size_t size) {
+	if ((nmemb >= MUL_NO_OVERFLOW || size >= MUL_NO_OVERFLOW) &&
+			nmemb > 0 && SIZE_MAX / nmemb < size) {
+		errno = ENOMEM;
+		return NULL;
+	}
+	return realloc(optr, size * nmemb);
+}
+
 adb_val_t adb_wa_append(struct adb_obj *o, adb_val_t v)
 {
 	assert(o->schema->kind == ADB_KIND_ARRAY);
-- 
2.44.0

